#!/usr/bin/perl

# CoverageByTestCase.pl <base-dir> <base-script-dir> <pool> <#begin> <#end> <file-name> <session-name>

use POSIX qw(strftime);
use strict;

my $now_string = strftime "%a %b %e %H:%M:%S %Y", gmtime;

print <<EOF;
#####################################################
# Execution of $0 script
# at $now_string
#####################################################
EOF

if ($#ARGV != 6) {
	print "ERROR: seven arguments nedded...\n$0 <base-dir> <base-script-dir> <pool> <#begin> <#end> <file-name> <session-name>\n";
	exit;
}

#print (join(",",@ARGV),"\n");

my $BASEDIR = $ARGV[0];
my $SCRIPTDIR = $ARGV[1];
my $POOL = $ARGV[2];
my $begin = $ARGV[3];
my $end   = $ARGV[4];
my $PROG = $ARGV[5];
my $SESSION = $ARGV[6];

my $DIRTEST = "$BASEDIR/$PROG/$SESSION";

chdir $DIRTEST or die "Can't locate $DIRTEST\n";

if (! (-e "$PROG-gcov.exe") ) {
	if (! (-e "$PROG-gcov.c") ) {
		system("cp $PROG.c $PROG-gcov.c");		
	}
	system("gcc --coverage $PROG-gcov.c -o $PROG-gcov.exe -w");
}

#Running program for each test case
my $tc;

if ( (-d "../result") ) {
	system("rm -rf ../result");	
}

system("mkdir ../result");

for($tc = $begin; $tc <= $end; $tc++) {
	#Running program
	print("Running program...\n");
	print("./$PROG-gcov.exe `cat ./$POOL/input$tc.tes`");
	system("./$PROG-gcov.exe `cat ./$POOL/input$tc.tes`");
	print("Done running program.\n");

	#Collecting coverage data
	print("Collecting coverage data...\n");
	system("lcov -t \"Cobertura TC-$tc\" -o $PROG-gcov.info -c -d .");
	print("Done collecting coverage data.\n");

	#Generating report
	print("Generating report...\n");
	system("genhtml -o report $PROG-gcov.info");
	print("Done Generating report.\n");

	#Generating graph
	#system("$SCRIPTDIR/PARSERsemINTERF/grafos $PROG-gcov");

	#Moving files
	print("Moving files...\n");
	system("mkdir ../result/tc-$tc");
	system("mv report *.gcda *.info ../result/tc-$tc/");
	#print(".");
	print("Done moving files.\n");
}
print("\n");
